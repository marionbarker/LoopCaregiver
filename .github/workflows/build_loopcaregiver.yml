name: 4. Build LoopCaregiver
run-name: Build LoopCaregiver (${{ github.ref_name }})
on:
  workflow_dispatch:

jobs:
  validate:
    name: Validate
    uses: ./.github/workflows/validate_secrets.yml
    secrets: inherit
  
  build:
    name: Build
    needs: validate
    runs-on: macos-13
    steps:
      # Uncomment to manually select latest Xcode if needed
      - name: Select Latest Xcode
        run: "sudo xcode-select --switch /Applications/Xcode_15.0.app/Contents/Developer"
      
      # Checks-out the repo
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          submodules: recursive
      
      # Patch Fastlane Match to not print tables
      - name: Patch Match Tables
        run: find /usr/local/lib/ruby/gems -name table_printer.rb | xargs sed -i "" "/puts(Terminal::Table.new(params))/d"
      
      # Build signed LoopCaregiver IPA file
      - name: Fastlane Build & Archive
        run: |
          # Ensure that gh exit codes are handled when output is piped.
          set -o pipefail
          if ! fastlane caregiver_build 2>&1 | tee fastlane.log; then
            if grep -q "No matching provisioning profiles found for" fastlane.log; then
              echo "Provisioning Profile Error" >> $GITHUB_STEP_SUMMARY
              echo "::error::Provisioning profile(s) invalid. Run the the following Github workflows to add them: 2. Add Identifiers 3. Create Certificates"
            elif grep -q "doesn't match the entitlements file's value for the com.apple.security.application-groups entitlement" fastlane.log; then
              echo "Missing App Group Error" >> $GITHUB_STEP_SUMMARY
              echo "::error::The app groups are not available for all 3 Caregiver app identifiers. Login to the Apple dev portal and add the Caregiver app group to each Caregiver identifier (see Lopp Docs). Then run the Create Certificates Github workflow"
            else
              echo "Build Error" >> $GITHUB_STEP_SUMMARY
              echo "::error::Review the build log for details."
            fi
            exit 1
          fi
        env:
          TEAMID: ${{ secrets.TEAMID }}
          GH_PAT: ${{ secrets.GH_PAT }}
          FASTLANE_KEY_ID: ${{ secrets.FASTLANE_KEY_ID }}
          FASTLANE_ISSUER_ID: ${{ secrets.FASTLANE_ISSUER_ID }}
          FASTLANE_KEY: ${{ secrets.FASTLANE_KEY }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
      
      # Upload to TestFlight
      - name: Fastlane upload to TestFlight
        run: fastlane caregiver_release
        env:
          TEAMID: ${{ secrets.TEAMID }}
          GH_PAT: ${{ secrets.GH_PAT }}
          FASTLANE_KEY_ID: ${{ secrets.FASTLANE_KEY_ID }}
          FASTLANE_ISSUER_ID: ${{ secrets.FASTLANE_ISSUER_ID }}
          FASTLANE_KEY: ${{ secrets.FASTLANE_KEY }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
      
      # Upload IPA and Symbols
      - name: Upload IPA and Symbol artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            artifacts
            buildlog
